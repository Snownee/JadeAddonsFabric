plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-fabric-" + project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.shedaniel.me/" }
    // trinkets
    maven { url "https://maven.terraformersmc.com/" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url = "https://api.modrinth.com/maven" } // LazyDFU, Suggestion Tweaker
    maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib
    maven { url = "https://maven.tterrag.com/" } // Registrate and Flywheel
    maven { url = "https://maven.cafeteria.dev/releases/" } // Fake Player API
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://jitpack.io/" } // Mixin Extras, fabric ASM
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
    maven { url = "https://dvs1.progwml6.com/files/maven/" } // JEI
    flatDir { dir 'libs' }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
    }
    // for Patchouli
    maven {
        url 'https://maven.blamejared.com'
    }
    // for WTHIT
    maven {
        url 'https://maven.bai.lol'
    }
    maven {
        url = "https://maven.draylar.dev/releases"
        content {
            includeGroup "dev.draylar"
        }
    }
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

// Include resources generated by data generators.
sourceSets {
    main.resources.srcDirs += "src/generated/resources"
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    modImplementation "dev.architectury:architectury-fabric:${project.architectury_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    //https://modrinth.com/mod/jade/versions
    modImplementation "maven.modrinth:jade:11.10.0+fabric"
    //modImplementation "libs:Jade-1.20:fabric-11.5.1"
    //modImplementation "curse.maven:create-fabric-624165:3913786"
    //https://modrinth.com/mod/lootr/versions
    modImplementation "maven.modrinth:lootr:0.7.33.81"
    modImplementation "curse.maven:kiwi-549404:4688477"
    //annotationProcessor "curse.maven:kiwi-549404:3680804"
    //modImplementation "curse.maven:techreborn-233564:3958646"
    //modImplementation "curse.maven:reborncore-237903:3958647"

    //modImplementation "maven.modrinth:secret-rooms:1.3.2"
    //modImplementation "curse.maven:arrp-463113:3901211"
    //https://modrinth.com/mod/modern-industrialization/versions
    modImplementation "maven.modrinth:modern-industrialization:1.8.6"
    modImplementation("dev.draylar:magna:${project.magna_version}") {
        exclude(group: "io.github.prospector")
        exclude(group: "me.shedaniel.cloth")
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("io.github.ladysnake:PlayerAbilityLib:${project.pal_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("vazkii.patchouli:Patchouli:${project.patchouli_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // create setup
    modImplementation("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.create_version}")
// { transitive = false }
    /*
    modImplementation("io.github.fabricators_of_create.Porting-Lib:porting-lib:${project.port_lib_version}+${project.minecraft_version}")
    //modImplementation("me.alphamode:ForgeTags:${project.forge_tags_version}")
    modImplementation("com.electronwill.night-config:core:${project.night_config_core_version}")
    modImplementation("com.electronwill.night-config:toml:${project.night_config_toml_version}")
    modImplementation("curse.maven:forge-config-api-port-fabric-547434:${project.config_api_id}") { transitive = false }
    modImplementation("com.tterrag.registrate_fabric:Registrate:${project.registrate_version}")
    modImplementation("com.jozufozu.flywheel:flywheel-fabric-${flywheel_minecraft_version}:${project.flywheel_version}")
    modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}")
    modImplementation("dev.cafeteria:fake-player-api:${project.fake_player_api_version}")
    modImplementation("io.github.tropheusj:milk-lib:${project.milk_lib_version}")
    implementation("com.google.code.findbugs:jsr305:${project.jsr305_version}")
    */

    modApi("teamreborn:energy:${project.tr_energy_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "dev.emi:trinkets:${trinkets_version}"
}

loom {
    mixin {
        defaultRefmapName = "${project.mod_id}.refmap.json"
    }

    //accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude '**/*.bat'
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            //artifact(sourcesJar) {
            //  builtBy remapSourcesJar
            //}
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    // This is the default. Remember to have the MODRINTH_TOKEN environment variable set or else this will fail, or set it to whatever you want - just make sure it stays private!
    projectId = "fThnVRli" // This can be the project ID or the slug. Either will work!
    versionNumber = project.mod_version
    // You don't need to set this manually. Will fail if Modrinth has this version already
    versionType = "release" // This is the default -- can also be `beta` or `alpha`
    uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["1.20", "1.20.1"] // Must be an array, even with only one version
    loaders = ["fabric", "quilt"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
    dependencies { // A special DSL for creating dependencies
        // scope.type
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        required.project "jade"
    }
}
